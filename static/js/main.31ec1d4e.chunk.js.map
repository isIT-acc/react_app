{"version":3,"sources":["components/Navbar.js","context/app/appContext.js","context/app/appReducer.js","context/types.js","context/app/AppState.js","components/Plot.js","components/MetalContent.js","components/RudaCharacteristics.js","components/Ruda.js","components/Notification.js","components/Recomendations.js","types/cellTypes.js","components/History.js","App.js","index.js"],"names":["Navbar","props","className","to","style","backgroundColor","title","id","highlighted","defaultProps","appContext","createContext","state","action","type","tableData","payload","tableHeaders","headers","trLoadOnMsc","trLoadOnMscRecom","trMineralWater","trMineralWaterRecom","trDopMshWork","trDopMshWorkRecom","trDopRegime","trDopRegimeRecom","lastUpdateTime","AppState","initialState","Date","useReducer","AppReducer","dispatch","Provider","value","getTableData","res","children","axisStyle","ticks","fontSize","stroke","Plot","dataForPlot","x","y","size","yVariance","drawGraphicLine","color","arrayOfVals","curve","curveCatmullRom","alpha","strokeType","sizeType","data","strokeDasharray","drawPointsOnGraphic","arrayOfPoints","colorType","fill","drawYDevOfValue","arrayOfData","yVarianceType","drawHorizontalArea","yDown","yUp","y0","getPartOfArray","array","firstIndex","secondIndex","arr","i","j","myFormatter","t","dx","String","replace","xCoord","func","objsArr","map","splice","margin","left","right","top","bottom","height","yDomain","xDomain","tickFormat","tickValues","tickSize","position","MySelect","withStyles","root","width","border","padding","icon","marginTop","marginRight","Select","average","marginLeft","flexSubheaderStyle","display","justifyContent","alignItems","flexSubheaderMediaStyle","flexDirection","factAndForecast","subheadingsStyle","factNumStyle","fontWeight","lineHeight","forecastNumStyle","cellContainerStyle","MetalContent","isMobile","useMediaQuery","query","React","useState","age","setAge","val","time","fact","disableUnderline","IconComponent","ExpandMoreIcon","onChange","event","target","displayEmpty","inputProps","MenuItem","index","key","toFixed","getHours","getMinutes","showValue","headerStyle","marginBottom","tableStyle","borderCollapse","headingCellStyle","textAlign","bodyCellStyle","firstColCellStyle","headingRowStyle","boldHighlight","borderBottom","greyHighlight","RudaCharacteristics","arrayOfRows","showRow","valsArr","cell","showFirstColumnCell","showCell","header","row","length","lessRedLabelsStyle","lessBlackLabelsStyle","Ruda","classes","makeStyles","theme","minWidth","useStyles","AirbnbSlider","track","thumb","borderRadius","boxShadow","valueLabel","background","active","Slider","ColorButton","verticalAlign","Button","defValue","setDefValue","vel","getAriaLabel","defaultValue","valueLabelDisplay","max","Math","floor","textTransform","Notification","isTabletOrMobile","useContext","AppContext","setBgBlue","setBgTransparent","cellDangerTxt","cellDangerBgTxt","cellDangerBorderBgTxt","borderTop","cellRecomTxt","cellRecomBgTxt","cellRecomBorderBgTxt","borderSpacing","tableHeaderStyle","nasosStyles","paddingRight","firstColMainStyle","firstColRecomStyle","Recomendations","useEffect","compareValues","value1","value2","showDangerCell","blueCell","showRecomCell","showFirstColCell","recom","transform","blueCellIn","colSpan","rowSpan","paddingLeft","History","App","exact","path","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAIA,SAASA,EAAOC,GACd,OACE,yBAAKC,UAAU,mCACb,kBAAC,IAAD,CAAMC,GAAG,cAAcD,UAAU,QAC/B,yBAAKA,UAAU,cACb,wBAAIE,MAAO,CAAEC,gBAAiB,aAC9B,wBAAID,MAAO,CAAEC,gBAAiB,aAC9B,wBAAID,MAAO,CAAEC,gBAAiB,cAEhC,wBAAIH,UAAU,aAAaD,EAAMK,QAGnC,kBAAC,IAAD,CACEC,GAAG,iBACHJ,GAAG,cACHD,UACwB,UAAtBD,EAAMO,YACF,kCACA,4BANR,4EAYA,kBAAC,IAAD,CACED,GAAG,UACHJ,GAAG,qBACHD,UACwB,YAAtBD,EAAMO,YACF,kCACA,4BANR,+CAeNR,EAAOS,aAAe,CACpBH,MAAO,SAMMN,Q,QC9CAU,EAFIC,0B,SCAJ,WAACC,EAAOC,GACrB,OAAQA,EAAOC,MACb,ICH0B,iBDIxB,OAAO,2BACFF,GADL,IAEEG,UAAWF,EAAOG,QAClBC,aAAcJ,EAAOG,QAAQE,QAC7BC,YAAaN,EAAOG,QAAQG,YAC5BC,iBAAkBP,EAAOG,QAAQI,iBACjCC,eAAgBR,EAAOG,QAAQK,eAC/BC,oBAAqBT,EAAOG,QAAQM,oBACpCC,aAAcV,EAAOG,QAAQO,aAC7BC,kBAAmBX,EAAOG,QAAQQ,kBAClCC,YAAaZ,EAAOG,QAAQS,YAC5BC,iBAAkBb,EAAOG,QAAQU,iBACjCC,eAAgBd,EAAOG,QAAQW,iBAGnC,QACE,OAAOf,IEuNEgB,EAtOE,SAAC3B,GAChB,IAAM4B,EAAe,CACnBd,UAAW,GACXE,aAAc,GACdE,YAAa,GACbC,iBAAkB,GAClBC,eAAgB,GAChBC,oBAAqB,GACrBC,aAAc,GACdC,kBAAmB,GACnBC,YAAa,GACbC,iBAAkB,GAClBC,eAAgB,IAAIG,MAZI,EAeAC,qBAAWC,EAAYH,GAfvB,mBAenBjB,EAfmB,KAeZqB,EAfY,KAgN1B,OACE,kBAAC,EAAWC,SAAZ,CACEC,MAAO,CACLpB,UAAWH,EAAMG,UACjBE,aAAcL,EAAMK,aACpBE,YAAaP,EAAMO,YACnBC,iBAAkBR,EAAMQ,iBACxBC,eAAgBT,EAAMS,eACtBC,oBAAqBV,EAAMU,oBAC3BC,aAAcX,EAAMW,aACpBC,kBAAmBZ,EAAMY,kBACzBC,YAAab,EAAMa,YACnBC,iBAAkBd,EAAMc,iBACxBC,eAAgBf,EAAMe,eACtBS,aA5Me,WACnB,IAAMC,EAAM,CACVnB,QAAS,CACP,uCACA,uCACA,6CACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,MAEFC,YAAa,CACX,mFACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEFC,iBAAkB,CAChB,2EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEFC,eAAgB,CACd,oDACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEFC,oBAAqB,CACnB,2EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEFC,aAAc,CACZ,wEACA,EACA,EACA,eACA,GACA,eACA,GACA,eACA,GACA,eACA,GACA,eACA,GACA,eACA,GACA,eACA,GACA,gBAEFC,kBAAmB,CACjB,2EACA,EACA,EACA,qBACA,GACA,eACA,GACA,eACA,GACA,eACA,GACA,eACA,GACA,eACA,GACA,eACA,GACA,gBAEFC,YAAa,CACX,2DACA,GACA,GACA,qCACA,qCACA,eACA,GACA,qCACA,qCACA,qBACA,GACA,oCACA,oCACA,qBACA,GACA,qCACA,OACA,QAEFC,iBAAkB,CAChB,2EACA,GACA,GACA,qCACA,qCACA,qBACA,GACA,qCACA,qCACA,qBACA,GACA,oCACA,oCACA,qBACA,GACA,qCACA,OACA,QAEFC,eAAgB,IAAIG,KAAK,KAAM,EAAG,GAAI,GAAI,GAAI,IAEhDG,EAAS,CACPnB,KDhNwB,iBCiNxBE,QAASqB,OAqBRpC,EAAMqC,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","file":"static/js/main.31ec1d4e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <nav className=\"navbar main-bg-color elevation \">\r\n      <Link to=\"/react_app/\" className=\"logo\">\r\n        <div className=\"logo_image\">\r\n          <hr style={{ backgroundColor: \"#efbd5d\" }}></hr>\r\n          <hr style={{ backgroundColor: \"#c9853f\" }}></hr>\r\n          <hr style={{ backgroundColor: \"#b73a2c\" }}></hr>\r\n        </div>\r\n        <h1 className=\"logo_text\">{props.title}</h1>\r\n      </Link>\r\n\r\n      <Link\r\n        id=\"recomendations\"\r\n        to=\"/react_app/\"\r\n        className={\r\n          props.highlighted === \"recom\"\r\n            ? \"uppercase-text menu_item active\"\r\n            : \"uppercase-text menu_item\"\r\n        }\r\n      >\r\n        рекомендации\r\n      </Link>\r\n\r\n      <Link\r\n        id=\"history\"\r\n        to=\"/react_app/history\"\r\n        className={\r\n          props.highlighted === \"history\"\r\n            ? \"uppercase-text menu_item active\"\r\n            : \"uppercase-text menu_item\"\r\n        }\r\n      >\r\n        история\r\n      </Link>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"EVRAZ\",\r\n};\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Navbar;\r\n","import { createContext } from \"react\";\r\n\r\nconst appContext = createContext();\r\n\r\nexport default appContext;\r\n","import { GET_TABLE_DATA } from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_TABLE_DATA:\r\n      return {\r\n        ...state,\r\n        tableData: action.payload,\r\n        tableHeaders: action.payload.headers,\r\n        trLoadOnMsc: action.payload.trLoadOnMsc,\r\n        trLoadOnMscRecom: action.payload.trLoadOnMscRecom,\r\n        trMineralWater: action.payload.trMineralWater,\r\n        trMineralWaterRecom: action.payload.trMineralWaterRecom,\r\n        trDopMshWork: action.payload.trDopMshWork,\r\n        trDopMshWorkRecom: action.payload.trDopMshWorkRecom,\r\n        trDopRegime: action.payload.trDopRegime,\r\n        trDopRegimeRecom: action.payload.trDopRegimeRecom,\r\n        lastUpdateTime: action.payload.lastUpdateTime,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","////////////////\r\nexport const GET_TABLE_DATA = \"GET_TABLE_DATA\";\r\n","import React, { useReducer } from \"react\";\r\n// import axios from \"axios\";\r\nimport AppContext from \"./appContext\";\r\nimport AppReducer from \"./appReducer\";\r\nimport { GET_TABLE_DATA } from \"../types\";\r\n\r\nconst AppState = (props) => {\r\n  const initialState = {\r\n    tableData: {},\r\n    tableHeaders: [],\r\n    trLoadOnMsc: [],\r\n    trLoadOnMscRecom: [],\r\n    trMineralWater: [],\r\n    trMineralWaterRecom: [],\r\n    trDopMshWork: [],\r\n    trDopMshWorkRecom: [],\r\n    trDopRegime: [],\r\n    trDopRegimeRecom: [],\r\n    lastUpdateTime: new Date(),\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // get data for table\r\n  const getTableData = () => {\r\n    const res = {\r\n      headers: [\r\n        \"Секции\",\r\n        \"Бедный\",\r\n        \"Богатый\",\r\n        \"1\",\r\n        \"2\",\r\n        \"3\",\r\n        \"4\",\r\n        \"5\",\r\n        \"6\",\r\n        \"7\",\r\n        \"8\",\r\n        \"9\",\r\n        \"10\",\r\n        \"11\",\r\n        \"12\",\r\n        \"13\",\r\n        \"14\",\r\n        \"15\",\r\n      ],\r\n      trLoadOnMsc: [\r\n        \"Нагрузки на МСЦ\",\r\n        193,\r\n        193,\r\n        193,\r\n        193,\r\n        193,\r\n        193,\r\n        197,\r\n        197,\r\n        197,\r\n        205,\r\n        197,\r\n        197,\r\n        197,\r\n        197,\r\n        197,\r\n        197,\r\n        197,\r\n      ],\r\n      trLoadOnMscRecom: [\r\n        \"рекомендация\",\r\n        193,\r\n        193,\r\n        193,\r\n        193,\r\n        193,\r\n        193,\r\n        197,\r\n        197,\r\n        197,\r\n        194,\r\n        197,\r\n        197,\r\n        197,\r\n        197,\r\n        197,\r\n        197,\r\n        197,\r\n      ],\r\n      trMineralWater: [\r\n        \"Руда/вода\",\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.86,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n      ],\r\n      trMineralWaterRecom: [\r\n        \"рекомендация\",\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n        0.85,\r\n      ],\r\n      trDopMshWork: [\r\n        \"Работа доп. МШ\",\r\n        7,\r\n        1,\r\n        \"да\",\r\n        \"\",\r\n        \"да\",\r\n        \"\",\r\n        \"да\",\r\n        \"\",\r\n        \"да\",\r\n        \"\",\r\n        \"да\",\r\n        \"\",\r\n        \"да\",\r\n        \"\",\r\n        \"да\",\r\n        \"\",\r\n        \"да\",\r\n      ],\r\n      trDopMshWorkRecom: [\r\n        \"рекомендация\",\r\n        6,\r\n        1,\r\n        \"нет\",\r\n        \"\",\r\n        \"да\",\r\n        \"\",\r\n        \"да\",\r\n        \"\",\r\n        \"да\",\r\n        \"\",\r\n        \"да\",\r\n        \"\",\r\n        \"да\",\r\n        \"\",\r\n        \"да\",\r\n        \"\",\r\n        \"да\",\r\n      ],\r\n      trDopRegime: [\r\n        \"Доп. режимы\",\r\n        \"\",\r\n        \"\",\r\n        \"Насос 802\",\r\n        \"Насос 802\",\r\n        \"да\",\r\n        \"\",\r\n        \"Насос 163\",\r\n        \"Насос 163\",\r\n        \"нет\",\r\n        \"\",\r\n        \"Насос 13\",\r\n        \"Насос 13\",\r\n        \"нет\",\r\n        \"\",\r\n        \"Насос 105\",\r\n        \"list\",\r\n        \"list\",\r\n      ],\r\n      trDopRegimeRecom: [\r\n        \"рекомендация\",\r\n        \"\",\r\n        \"\",\r\n        \"Насос 802\",\r\n        \"Насос 802\",\r\n        \"нет\",\r\n        \"\",\r\n        \"Насос 163\",\r\n        \"Насос 163\",\r\n        \"нет\",\r\n        \"\",\r\n        \"Насос 13\",\r\n        \"Насос 13\",\r\n        \"нет\",\r\n        \"\",\r\n        \"Насос 105\",\r\n        \"list\",\r\n        \"list\",\r\n      ],\r\n      lastUpdateTime: new Date(2020, 7, 24, 10, 15, 0),\r\n    };\r\n    dispatch({\r\n      type: GET_TABLE_DATA,\r\n      payload: res,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        tableData: state.tableData,\r\n        tableHeaders: state.tableHeaders,\r\n        trLoadOnMsc: state.trLoadOnMsc,\r\n        trLoadOnMscRecom: state.trLoadOnMscRecom,\r\n        trMineralWater: state.trMineralWater,\r\n        trMineralWaterRecom: state.trMineralWaterRecom,\r\n        trDopMshWork: state.trDopMshWork,\r\n        trDopMshWorkRecom: state.trDopMshWorkRecom,\r\n        trDopRegime: state.trDopRegime,\r\n        trDopRegimeRecom: state.trDopRegimeRecom,\r\n        lastUpdateTime: state.lastUpdateTime,\r\n        getTableData,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppState;\r\n","import React from \"react\";\r\nimport \"../../node_modules/react-vis/dist/style.css\";\r\nimport {\r\n  LineSeries,\r\n  XAxis,\r\n  YAxis,\r\n  WhiskerSeries,\r\n  MarkSeries,\r\n  AreaSeries,\r\n  FlexibleWidthXYPlot,\r\n  PolygonSeries,\r\n} from \"react-vis\";\r\nimport { curveCatmullRom } from \"d3-shape\";\r\n\r\nconst Plot = () => {\r\n  const dataForPlot = [\r\n    { x: 0.5, y: 61.44, size: 0, yVariance: 0.1 },\r\n    { x: 1, y: 61.65, size: 4, yVariance: 0.1 },\r\n    { x: 2, y: 61.67, size: 4, yVariance: 0.1 },\r\n    { x: 3, y: 61.5, size: 4, yVariance: 0.1 },\r\n    { x: 4, y: 61.49, size: 4, yVariance: 0.1 },\r\n    { x: 5, y: 61.35, size: 4, yVariance: 0.1 },\r\n    { x: 6, y: 61.43, size: 4, yVariance: 0.1 },\r\n    { x: 7, y: 61.45, size: 4, yVariance: 0.1 },\r\n    { x: 8, y: 61.43, size: 4, yVariance: 0.1 },\r\n    { x: 9, y: 61.66, size: 4, yVariance: 0.1 },\r\n    { x: 10, y: 61.46, size: 4, yVariance: 0.1 },\r\n    { x: 11, y: 61.42, size: 4, yVariance: 0.12 },\r\n    { x: 12, y: 61.45, size: 4, yVariance: 0.3 },\r\n  ];\r\n\r\n  const sredneeZaSmenu = 61.45;\r\n\r\n  const drawTriangle = () => {\r\n    const myData = [\r\n      { x: 10, y: 61.84 },\r\n      { x: 10.2, y: 61.82 },\r\n      { x: 10.4, y: 61.84 },\r\n    ];\r\n    return (\r\n      <PolygonSeries\r\n        data={myData}\r\n        style={{\r\n          // note that this can not be translated to the canvas version\r\n          stroke: \"black\",\r\n          position: \"relative\",\r\n          fill: \"black\",\r\n        }}\r\n      />\r\n    );\r\n  };\r\n  // color-string,type-string, dotted or solid,\r\n  const drawGraphicLine = (color, type, arrayOfVals) => {\r\n    if (type === \"dotted\")\r\n      return (\r\n        <LineSeries\r\n          curve={curveCatmullRom.alpha(0.5)}\r\n          strokeType=\"literal\"\r\n          sizeType=\"literal\"\r\n          data={arrayOfVals}\r\n          style={{\r\n            // note that this can not be translated to the canvas version\r\n            strokeDasharray: \"1 3\",\r\n            stroke: color,\r\n          }}\r\n        />\r\n      );\r\n    if (type === \"solid\")\r\n      return (\r\n        <LineSeries\r\n          curve={curveCatmullRom.alpha(0.5)}\r\n          strokeType=\"literal\"\r\n          sizeType=\"literal\"\r\n          style={{ stroke: color }}\r\n          data={arrayOfVals}\r\n        />\r\n      );\r\n  };\r\n  const drawXAxis = () => {\r\n    return (\r\n      <XAxis\r\n        strokeType=\"literal\"\r\n        tickFormat={myFormatter}\r\n        tickValues={func(dataForPlot)}\r\n        style={axisStyle}\r\n        tickSize={0}\r\n      />\r\n    );\r\n  };\r\n  const drawYAxis = () => {\r\n    return (\r\n      <YAxis\r\n        tickFormat={myFormatter}\r\n        tickValues={[0, 61.44, 61.84]}\r\n        style={axisStyle}\r\n        tickSize={0}\r\n      />\r\n    );\r\n  };\r\n\r\n  const drawPointsOnGraphic = (color, arrayOfPoints) => {\r\n    return (\r\n      <MarkSeries\r\n        curve={curveCatmullRom.alpha(0.5)}\r\n        colorType=\"literal\"\r\n        sizeType=\"literal\"\r\n        style={{ stroke: color, fill: color }}\r\n        data={arrayOfPoints}\r\n      />\r\n    );\r\n  };\r\n\r\n  const drawYDevOfValue = (color, arrayOfData) => {\r\n    return (\r\n      <WhiskerSeries\r\n        yVarianceType=\"literal\"\r\n        className=\"whisker-series-example\"\r\n        style={{ stroke: color }}\r\n        data={arrayOfData}\r\n      />\r\n    );\r\n  };\r\n\r\n  const drawHorizontalArea = (color, yDown, yUp) => {\r\n    return (\r\n      <AreaSeries\r\n        style={{ stroke: color, fill: color }}\r\n        data={[\r\n          { x: 0.5, y: yUp, y0: yDown },\r\n          { x: 12, y: yUp, y0: yDown },\r\n        ]}\r\n      />\r\n    );\r\n  };\r\n\r\n  const getDottedHorLine = (yCoord) => {\r\n    return (\r\n      <LineSeries\r\n        curve={curveCatmullRom.alpha(0.5)}\r\n        strokeType=\"literal\"\r\n        sizeType=\"literal\"\r\n        data={[\r\n          {\r\n            x: 0.5,\r\n            y: sredneeZaSmenu,\r\n          },\r\n          {\r\n            x: 12,\r\n            y: sredneeZaSmenu,\r\n          },\r\n        ]}\r\n        style={{\r\n          // note that this can not be translated to the canvas version\r\n          strokeDasharray: \"1 3\",\r\n          stroke: \"rgb(168, 168, 168)\",\r\n        }}\r\n      />\r\n    );\r\n  };\r\n  const getDottedVerticalLine = (xCoord) => {\r\n    return (\r\n      <LineSeries\r\n        curve={curveCatmullRom.alpha(0.5)}\r\n        strokeType=\"literal\"\r\n        sizeType=\"literal\"\r\n        data={[\r\n          { x: 8, y: 61.0 },\r\n          { x: 8, y: 61.84 },\r\n        ]}\r\n        style={{\r\n          // note that this can not be translated to the canvas version\r\n          strokeDasharray: \"1 3\",\r\n          stroke: \"rgb(168, 168, 168)\",\r\n        }}\r\n      />\r\n    );\r\n  };\r\n  const getBoldVerticalLine = (xCoord) => {\r\n    return (\r\n      <LineSeries\r\n        curve={curveCatmullRom.alpha(0.5)}\r\n        strokeType=\"literal\"\r\n        sizeType=\"literal\"\r\n        data={[\r\n          { x: xCoord, y: 61.0 },\r\n          { x: xCoord, y: 61.84 },\r\n        ]}\r\n        style={{\r\n          // note that this can not be translated to the canvas version\r\n          stroke: \"black\",\r\n          position: \"relative\",\r\n        }}\r\n      ></LineSeries>\r\n    );\r\n  };\r\n\r\n  const getPartOfArray = (array, firstIndex, secondIndex) => {\r\n    let arr = [];\r\n    let i = 0;\r\n    let j = firstIndex;\r\n    for (; j <= secondIndex; j++) {\r\n      arr[i++] = array[j];\r\n    }\r\n\r\n    return arr;\r\n  };\r\n  function myFormatter(t, i) {\r\n    return (\r\n      <tspan x=\"-18\" dx=\"1rem\">\r\n        {String(t).replace(\".\", \",\")}\r\n      </tspan>\r\n    );\r\n  }\r\n\r\n  const func = (objsArr) => {\r\n    let arr = objsArr.map((value) => {\r\n      return value.x;\r\n    });\r\n    arr.splice(0, 1);\r\n    return arr;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FlexibleWidthXYPlot\r\n        // width={width}\r\n        margin={{ left: 70, right: 10, top: 10, bottom: 40 }}\r\n        // width={710}\r\n        height={200}\r\n        yDomain={[61.0, 61.84]}\r\n        xDomain={[0.5, 12]}\r\n      >\r\n        {drawXAxis()}\r\n        {drawYAxis()}\r\n        {drawHorizontalArea(\"#dbf0eb\", 61.24, 61.64)}\r\n        {drawHorizontalArea(\"#fdf1f1\", 61.0, 61.24)}\r\n        {drawHorizontalArea(\"#fdf1f1\", 61.64, 61.84)}\r\n        {drawGraphicLine(\"black\", \"dotted\", getPartOfArray(dataForPlot, 9, 11))}\r\n\r\n        {drawGraphicLine(\"black\", \"solid\", getPartOfArray(dataForPlot, 0, 9))}\r\n        {drawGraphicLine(\r\n          \"rgb(91, 150, 176)\",\r\n          \"dotted\",\r\n          getPartOfArray(dataForPlot, 11, 12)\r\n        )}\r\n        {drawPointsOnGraphic(\"#9c3647\", getPartOfArray(dataForPlot, 1, 2))}\r\n        {drawPointsOnGraphic(\"#258c7a\", getPartOfArray(dataForPlot, 3, 8))}\r\n        {drawPointsOnGraphic(\"#9c3647\", [dataForPlot[9]])}\r\n        {drawPointsOnGraphic(\"#258c7a\", getPartOfArray(dataForPlot, 10, 12))}\r\n        {drawYDevOfValue(\"#5b96b0\", [dataForPlot[12]])}\r\n        {drawYDevOfValue(\"black\", getPartOfArray(dataForPlot, 10, 11))}\r\n\r\n        {getDottedVerticalLine(8)}\r\n        {getDottedHorLine(sredneeZaSmenu)}\r\n        {getBoldVerticalLine(10.2)}\r\n        {drawTriangle()}\r\n      </FlexibleWidthXYPlot>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst axisStyle = {\r\n  ticks: {\r\n    fontSize: \"14px\",\r\n    // color: \"black\",\r\n    stroke: \"black\",\r\n  },\r\n  title: {\r\n    fontSize: \"16px\",\r\n    // color: \"black\",\r\n  },\r\n};\r\n\r\nexport default Plot;\r\n","import React from \"react\";\r\n\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nimport \"../../node_modules/react-vis/dist/style.css\";\r\n\r\nimport Plot from \"./Plot\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nconst sredneeZaSmenu = 61.45;\r\nconst MySelect = withStyles({\r\n  root: {\r\n    width: \"10rem\",\r\n    border: \"1px solid #e2e2e2\",\r\n    fontSize: \"0.7rem\",\r\n    padding: \"0.4rem 0.8rem\",\r\n  },\r\n  icon: {\r\n    fontSize: \"1rem\",\r\n    color: \"rgb(168, 168, 168)\",\r\n    marginTop: \"0.25rem\",\r\n    marginRight: \"0.25rem\",\r\n  },\r\n})(Select);\r\n\r\nconst MetalContent = () => {\r\n  const isMobile = useMediaQuery({ query: \"(max-width: 438px)\" });\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n  const [age, setAge] = React.useState(\"\");\r\n\r\n  const arr = [\r\n    { val: 61.44, time: new Date(2020, 7, 26, 1, 0, 0), fact: false },\r\n    { val: 61.65, time: new Date(2020, 7, 26, 1, 0, 0), fact: false },\r\n    { val: 61.67, time: new Date(2020, 7, 26, 2, 0, 0), fact: false },\r\n    { val: 61.5, time: new Date(2020, 7, 26, 3, 0, 0), fact: false },\r\n    { val: 61.49, time: new Date(2020, 7, 26, 4, 0, 0), fact: false },\r\n    { val: 61.35, time: new Date(2020, 7, 26, 5, 0, 0), fact: false },\r\n    { val: 61.43, time: new Date(2020, 7, 26, 6, 0, 0), fact: false },\r\n    { val: 61.45, time: new Date(2020, 7, 26, 7, 0, 0), fact: false },\r\n    { val: 61.43, time: new Date(2020, 7, 26, 8, 0, 0), fact: false },\r\n    { val: 61.66, time: new Date(2020, 7, 26, 9, 0, 0), fact: true },\r\n    { val: 61.46, time: new Date(2020, 7, 26, 10, 0, 0), fact: false },\r\n    { val: 61.42, time: new Date(2020, 7, 26, 11, 0, 0), fact: false },\r\n    { val: 61.45, time: new Date(2020, 7, 26, 12, 0, 0), fact: false },\r\n  ];\r\n\r\n  const showValue = (value, index) => {\r\n    if (index >= 9)\r\n      return (\r\n        <div style={cellContainerStyle} key={index}>\r\n          <div style={value.fact ? factNumStyle : forecastNumStyle}>\r\n            {String(value.val.toFixed(2)).replace(\".\", \",\")}\r\n          </div>\r\n          <div style={subheadingsStyle}>\r\n            {value.fact ? \"факт \" : \"прогноз \"}\r\n            {value.time.getHours() +\r\n              \":\" +\r\n              (value.time.getMinutes() < 10\r\n                ? \"0\" + value.time.getMinutes()\r\n                : value.time.getMinutes())}\r\n          </div>\r\n        </div>\r\n      );\r\n  };\r\n\r\n  const showAverageValue = (array) => {\r\n    return (\r\n      <div>\r\n        <div style={forecastNumStyle}>\r\n          {String(sredneeZaSmenu).replace(\".\", \",\")}\r\n          {/* {String(countAverageVal(array).toFixed(2)).replace(\".\", \",\")} */}\r\n        </div>\r\n        <div style={subheadingsStyle}>{\"среднее за смену\"}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"metalContent\">\r\n      <div className=\"cardContainer\">\r\n        <div className=\"flexHeader\">\r\n          <div className=\"headersStyle\">\r\n            Содержание металла в концентрате, %\r\n          </div>\r\n          <div className=\"dropdownList\">\r\n            <MySelect\r\n              disableUnderline\r\n              IconComponent={ExpandMoreIcon}\r\n              // className={classes.icon && classes.root}\r\n              value={age}\r\n              onChange={handleChange}\r\n              displayEmpty\r\n              // className={classes.selectEmpty}\r\n              inputProps={{ \"aria-label\": \"Without label\" }}\r\n            >\r\n              <MenuItem value=\"\">Fe (общ.) </MenuItem>\r\n              <MenuItem value={10}>Other_1 (общ.) </MenuItem>\r\n              <MenuItem value={20}>Other_2 (общ.) </MenuItem>\r\n              <MenuItem value={30}>Other_3 (общ.) </MenuItem>\r\n            </MySelect>\r\n          </div>\r\n        </div>\r\n        <div style={flexSubheaderStyle}>\r\n          <div style={isMobile ? flexSubheaderMediaStyle : factAndForecast}>\r\n            {arr.map((value, index) => {\r\n              return showValue(value, index);\r\n            })}\r\n          </div>\r\n          <div style={average}>{showAverageValue(arr)}</div>\r\n        </div>\r\n        <Plot></Plot>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst average = {\r\n  marginLeft: \"1rem\",\r\n};\r\n\r\nconst flexSubheaderStyle = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  padding: \"1rem 0\",\r\n  alignItems: \"flex-start\",\r\n};\r\n\r\nconst flexSubheaderMediaStyle = {\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n};\r\n\r\nconst factAndForecast = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  width: \"70%\",\r\n  alignItems: \"flex-start\",\r\n};\r\n\r\nconst subheadingsStyle = {\r\n  color: \"#a8a8a8\",\r\n  fontSize: \"0.7rem\",\r\n};\r\n\r\nconst factNumStyle = {\r\n  color: \"#9c3647\",\r\n  fontSize: \"1.5rem\",\r\n  fontWeight: \"600\",\r\n  lineHeight: \"1.7rem\",\r\n};\r\nconst forecastNumStyle = {\r\n  color: \"#258c70\",\r\n  fontSize: \"1.5rem\",\r\n  fontWeight: \"600\",\r\n  lineHeight: \"1.7rem\",\r\n};\r\n\r\nconst cellContainerStyle = { marginRight: \"1rem\" };\r\n\r\nexport default MetalContent;\r\n","import React from \"react\";\r\n\r\nconst RudaCharacteristics = () => {\r\n  const headRow = [\"\", \"текущее\", \"через 1 час\"];\r\n  const dataRow = [\r\n    [\"ПО\", 63.97, 64.23],\r\n    [\"Г\", 20, 20],\r\n    [\"Ю\", 10, 15],\r\n    [\"З\", 25, 35],\r\n    [\"С\", 40, 25],\r\n    [\"Э 48\", 5, 5],\r\n    [\"...\", \"-\", \"-\"],\r\n  ];\r\n\r\n  const showCell = (cell, index) => {\r\n    return (\r\n      <td style={bodyCellStyle} key={index}>\r\n        {cell}\r\n      </td>\r\n    );\r\n  };\r\n  const showFirstColumnCell = (cell, index) => {\r\n    return (\r\n      <td style={firstColCellStyle} key={index}>\r\n        {cell}\r\n      </td>\r\n    );\r\n  };\r\n\r\n  const showHeaderRow = (valsArr) => {\r\n    return valsArr.map((header, index) => (\r\n      <th style={headingCellStyle} key={index}>\r\n        {header}\r\n      </th>\r\n    ));\r\n  };\r\n\r\n  const showRow = (valsArr) => {\r\n    return valsArr.map((cell, index) => {\r\n      if (index === 0) {\r\n        return showFirstColumnCell(cell, index);\r\n      } else {\r\n        return showCell(cell, index);\r\n      }\r\n    });\r\n  };\r\n\r\n  const showTableBody = (arrayOfRows) => {\r\n    return arrayOfRows.map((row, index) => {\r\n      if (index === 0)\r\n        return (\r\n          <tr style={boldHighlight} key={index}>\r\n            {showRow(row)}\r\n          </tr>\r\n        );\r\n      if (index === arrayOfRows.length - 1)\r\n        return <tr key={index}>{showRow(row)}</tr>;\r\n      return (\r\n        <tr style={greyHighlight} key={index}>\r\n          {showRow(row)}\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"rudaCharacteristics\">\r\n      <div className=\"cardContainer\">\r\n        <div style={headerStyle} className=\"headersStyle\">\r\n          Характеристики руды, %\r\n        </div>\r\n        <table style={tableStyle}>\r\n          <thead>\r\n            <tr style={headingRowStyle}>{showHeaderRow(headRow)}</tr>\r\n          </thead>\r\n          <tbody>{showTableBody(dataRow)}</tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst headerStyle = {\r\n  marginBottom: \"0.5rem\",\r\n};\r\nconst tableStyle = {\r\n  width: \"100%\",\r\n  borderCollapse: \"collapse\",\r\n};\r\n\r\nconst headingCellStyle = {\r\n  textAlign: \"center\",\r\n  color: \"#a8a8a8\",\r\n  fontSize: \"0.7rem\",\r\n  fontWeight: \"500\",\r\n};\r\n\r\nconst bodyCellStyle = {\r\n  textAlign: \"center\",\r\n  // color: \"#a8a8a8\",\r\n  fontSize: \"1.3rem\",\r\n  // fontWeight: \"500\",\r\n  fontWeight: \"600\",\r\n  color: \"black\",\r\n};\r\n\r\nconst firstColCellStyle = {\r\n  fontWeight: \"100\",\r\n  color: \"black\",\r\n  fontSize: \"1.3rem\",\r\n};\r\n\r\nconst headingRowStyle = {\r\n  height: \"1.6rem\",\r\n};\r\n\r\nconst boldHighlight = {\r\n  borderBottom: \"2px solid black\",\r\n};\r\nconst greyHighlight = {\r\n  borderBottom: \"2px solid #e2e2e2\",\r\n};\r\nexport default RudaCharacteristics;\r\n","import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nconst Ruda = () => {\r\n  const vel = 250;\r\n  const velPlan = 255;\r\n  const maxSliderValue = 45900;\r\n  // const [vel, setVel] = React.useState(250);\r\n  // const [velPlan, setVelPlan] = React.useState(255);\r\n  // const [maxSliderValue, setMaxSliderValue] = React.useState(45900);\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: \"1.8rem\",\r\n      minWidth: \"4.5rem\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const AirbnbSlider = withStyles({\r\n    root: {\r\n      color: \"#515151\",\r\n    },\r\n    track: {\r\n      height: 3,\r\n    },\r\n    thumb: {\r\n      height: 11,\r\n      width: 1,\r\n      borderRadius: 1,\r\n\r\n      \"&:focus, &:hover, &$active\": {\r\n        boxShadow: \"#ccc 0 2px 3px 1px\",\r\n      },\r\n      marginTop: -4,\r\n      marginLeft: 0.5,\r\n    },\r\n    valueLabel: {\r\n      left: -13,\r\n      top: -22,\r\n      \"& *\": {\r\n        background: \"transparent\",\r\n        color: \"#000\",\r\n      },\r\n    },\r\n    active: {},\r\n  })(Slider);\r\n  const handleChange = (event, value) => {\r\n    setDefValue(value);\r\n  };\r\n\r\n  const ColorButton = withStyles((theme) => ({\r\n    root: {\r\n      fontSize: \"1.3rem\",\r\n      color: \"white\",\r\n      backgroundColor: \"#ef4b53\",\r\n      height: \"2.2rem\",\r\n      verticalAlign: \"middle\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#ef4b53\",\r\n        // boxShadow: \"none\",\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n  const [defValue, setDefValue] = React.useState(31900);\r\n  return (\r\n    <div className=\"ruda\">\r\n      <div className=\"cardContainer\">\r\n        <div style={{ marginBottom: \"1.3rem\" }} className=\"flexHeader\">\r\n          <div className=\"vel\">\r\n            <div style={{ fontWeight: \"700\", color: \"black\" }}>Руда</div>\r\n            <div\r\n              style={{ fontWeight: \"600\", color: \"black\", fontSize: \"1.4rem\" }}\r\n            >\r\n              {vel} т/ч\r\n            </div>\r\n          </div>\r\n          <div className=\"planVel\">\r\n            <div>\r\n              <ColorButton\r\n                // style={{ fontSize: \"1.3rem\" }}\r\n                className={classes.root}\r\n              >\r\n                <span style={{ lineHeight: \"1.8rem\" }}>{vel - velPlan}</span>\r\n              </ColorButton>\r\n            </div>\r\n            <div\r\n              style={{\r\n                color: \"#ef4b53\",\r\n                fontSize: \"0.7rem\",\r\n\r\n                lineHeight: \"1.3rem\",\r\n                marginTop: \"0.5rem\",\r\n              }}\r\n            >\r\n              {velPlan} план час\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <AirbnbSlider\r\n          // ThumbComponent={AirbnbThumbComponent}\r\n          getAriaLabel={(index) =>\r\n            index === 0 ? \"Minimum price\" : \"Maximum price\"\r\n          }\r\n          defaultValue={defValue}\r\n          valueLabelDisplay=\"on\"\r\n          onChange={handleChange}\r\n          max={maxSliderValue}\r\n        />\r\n\r\n        <div className=\"flexHeader\">\r\n          <div style={lessBlackLabelsStyle}>{maxSliderValue} план смены</div>\r\n          <div className=\"flexHeader\">\r\n            <ArrowDropDownIcon\r\n              style={{ color: \"#ef4b53\", fontSize: \"1.3rem\" }}\r\n            />\r\n            <div style={lessRedLabelsStyle}>\r\n              {Math.floor((vel / velPlan) * 100)}% прогноз\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst lessRedLabelsStyle = {\r\n  color: \"#ef4b53\",\r\n  fontSize: \"0.7rem\",\r\n\r\n  lineHeight: \"1.3rem\",\r\n  marginTop: \"0.1rem\",\r\n};\r\nconst lessBlackLabelsStyle = {\r\n  color: \"#000\",\r\n  fontSize: \"0.75rem\",\r\n\r\n  // lineHeight: \"1.3rem\",\r\n  // marginTop: \"0.1rem\",\r\n};\r\nexport default Ruda;\r\n","import React, { useContext } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport AppContext from \"../context/app/appContext\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: \"black\",\r\n    textTransform: \"uppercase\",\r\n    backgroundColor: \"#eff4f7\",\r\n    border: \"1px solid #bbb5b7\",\r\n    fontSize: \"0.8rem\",\r\n    height: \"2.2rem\",\r\n    width: \"8rem\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#eff4f7\",\r\n      // boxShadow: \"none\",\r\n    },\r\n  },\r\n}))(Button);\r\n\r\nconst Notification = () => {\r\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 750px)\" });\r\n  const appContext = useContext(AppContext);\r\n  const { lastUpdateTime } = appContext;\r\n  return (\r\n    <div className=\"notification\" style={{ backgroundColor: \"#fde9eb\" }}>\r\n      <div className=\"cardContainer\">\r\n        {isTabletOrMobile ? (\r\n          <div>\r\n            <ErrorIcon\r\n              style={{ color: \"#ef4b53\", fontSize: \"2rem\" }}\r\n            ></ErrorIcon>\r\n            <div>Уведомление</div>\r\n            <div>\r\n              {lastUpdateTime.getHours()}:{lastUpdateTime.getMinutes()}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"flexCenter\">\r\n            <div className=\"flexCenter\">\r\n              <ErrorIcon\r\n                style={{ color: \"#ef4b53\", fontSize: \"2rem\" }}\r\n              ></ErrorIcon>\r\n              <span style={{ marginLeft: \"1rem\" }}>Уведомление</span>\r\n            </div>\r\n            <div>\r\n              {lastUpdateTime.getHours()}:{lastUpdateTime.getMinutes()}\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div style={{ marginTop: \"1rem\" }}>Поступила новая рекомендация</div>\r\n        <div style={{ marginTop: \"2rem\", textAlign: \"right\" }}>\r\n          <ColorButton>ok</ColorButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Notification;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nimport AppContext from \"../context/app/appContext\";\r\n\r\nimport { ONLY_TXT, BG_TXT, BORDER_BG_TXT } from \"../types/cellTypes\";\r\n\r\nimport MetalContent from \"./MetalContent\";\r\nimport RudaCharacteristics from \"./RudaCharacteristics\";\r\nimport Ruda from \"./Ruda\";\r\nimport Notification from \"./Notification\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nconst MySelect = withStyles({\r\n  root: {\r\n    // width: \"10rem\",\r\n    border: \"1px solid #e2e2e2\",\r\n    fontSize: \"0.7rem\",\r\n    padding: \"0.4rem 0.8rem\",\r\n  },\r\n  icon: {\r\n    fontSize: \"1rem\",\r\n    color: \"rgb(168, 168, 168)\",\r\n    marginTop: \"0.25rem\",\r\n    marginRight: \"0.25rem\",\r\n  },\r\n})(Select);\r\n\r\nconst Recomendations = () => {\r\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 821px)\" });\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n  const [age, setAge] = React.useState(\"\");\r\n  const appContext = useContext(AppContext);\r\n  const {\r\n    getTableData,\r\n    tableHeaders,\r\n    trLoadOnMsc,\r\n    trLoadOnMscRecom,\r\n    trMineralWater,\r\n    trMineralWaterRecom,\r\n    trDopMshWork,\r\n    trDopMshWorkRecom,\r\n    trDopRegime,\r\n    trDopRegimeRecom,\r\n    lastUpdateTime,\r\n  } = appContext;\r\n\r\n  useEffect(() => {\r\n    getTableData();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const compareValues = (value1, value2) => {\r\n    // делаем рассчёты и присваиваем какое-то значение текущему типу, всего три типа ячеек в таблице, ячейка получает какой-то один тип и стилизуется на выходе в соответствии с этим типом\r\n\r\n    if (value1 !== value2) {\r\n      return false;\r\n    } else return true;\r\n  };\r\n\r\n  const showDangerCell = (cell, index, type, blueCell) => {\r\n    if (type === ONLY_TXT) {\r\n      return (\r\n        <td key={index}>\r\n          <div className=\"cell\" style={blueCell ? setBgBlue : setBgTransparent}>\r\n            <span style={cellDangerTxt}>{cell}</span>\r\n          </div>\r\n        </td>\r\n      );\r\n    }\r\n    if (type === BG_TXT) {\r\n      return (\r\n        <td key={index}>\r\n          <div className=\"cell\" style={blueCell ? setBgBlue : setBgTransparent}>\r\n            <span style={cellDangerBgTxt}>{cell}</span>\r\n          </div>\r\n        </td>\r\n      );\r\n    }\r\n    if (type === BORDER_BG_TXT) {\r\n      return (\r\n        <td key={index}>\r\n          <div className=\"cell\" style={blueCell ? setBgBlue : setBgTransparent}>\r\n            <span style={cellDangerBorderBgTxt}>{cell}</span>\r\n          </div>\r\n        </td>\r\n      );\r\n    }\r\n  };\r\n\r\n  const showRecomCell = (cell, index, type, blueCell) => {\r\n    if (type === ONLY_TXT) {\r\n      return (\r\n        <td key={index}>\r\n          <div className=\"cell\" style={blueCell ? setBgBlue : setBgTransparent}>\r\n            <span style={cellRecomTxt}>{cell}</span>\r\n          </div>\r\n        </td>\r\n      );\r\n    }\r\n    if (type === BG_TXT) {\r\n      return (\r\n        <td key={index}>\r\n          <div className=\"cell\" style={blueCell ? setBgBlue : setBgTransparent}>\r\n            <span style={cellRecomBgTxt}>{cell}</span>\r\n          </div>\r\n        </td>\r\n      );\r\n    }\r\n    if (type === BORDER_BG_TXT) {\r\n      return (\r\n        <td key={index}>\r\n          <div className=\"cell\" style={blueCell ? setBgBlue : setBgTransparent}>\r\n            <span style={cellRecomBorderBgTxt}>{cell}</span>\r\n          </div>\r\n        </td>\r\n      );\r\n    }\r\n  };\r\n\r\n  const showCellAfterCount = () => {\r\n    if (compareValues(trDopRegime[5], trDopRegimeRecom[5]))\r\n      return showCell(trDopRegime[5], 5);\r\n    else return showDangerCell(trDopRegime[5], 5, BORDER_BG_TXT);\r\n  };\r\n\r\n  // blueCell:boolean\r\n  // create compare function\r\n  const showCell = (cell, index, blueCell, fontWeight, color) => {\r\n    // let cellStyle = null;\r\n    // if (blueCell) cellStyle = setBgBlue;\r\n    // else cellStyle = setBgTransparent;\r\n    // backgroundColor: \"#e1effc\"\r\n    return (\r\n      <td key={index}>\r\n        <div className=\"cell\" style={blueCell ? setBgBlue : setBgTransparent}>\r\n          <span style={{ fontWeight: `${fontWeight}`, color: `${color}` }}>\r\n            {cell}\r\n          </span>\r\n        </div>\r\n      </td>\r\n    );\r\n  };\r\n  //recom is boolean\r\n  const showFirstColCell = (cell, index, recom) => {\r\n    return (\r\n      <td key={index}>\r\n        <span style={recom ? firstColRecomStyle : firstColMainStyle}>\r\n          {cell}\r\n        </span>\r\n      </td>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"gridContainer\">\r\n      <div className=\"recomendations\">\r\n        <div className=\"scroll\">\r\n          <table className=\"main-bg-color\" style={tableStyle}>\r\n            <thead>\r\n              <tr style={tableHeaderStyle}>\r\n                {tableHeaders.map((header, index) => {\r\n                  if (isTabletOrMobile && (index === 1 || index === 2))\r\n                    return (\r\n                      <th\r\n                        style={{\r\n                          width: \"1rem\",\r\n                          position: \"relative\",\r\n                        }}\r\n                        key={index}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            transform: \"rotate(90deg)\",\r\n                            position: \"absolute\",\r\n                            top: \"7px\",\r\n                            left: \"-25%\",\r\n                          }}\r\n                        >\r\n                          {header}\r\n                        </div>\r\n                      </th>\r\n                    );\r\n                  else return <th key={index}>{header}</th>;\r\n                })}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* first pair of rows*/}\r\n              <tr>\r\n                {trLoadOnMsc.map((cell, index) => {\r\n                  // change font-weight of first column cell lite in task\r\n                  // if(index)\r\n                  if (index === 0) {\r\n                    return showFirstColCell(cell, index, false);\r\n                  } else {\r\n                    // будет работать в таком ключе как ниже\r\n                    // if (compareValues(cell, trLoadOnMscRecom[index]))\r\n                    //   return showCell(cell, index);\r\n                    // else\r\n                    // return showDangerCell(cell, index, cur_type);\r\n                    let blueCellIn = false;\r\n                    if (\r\n                      index === 2 ||\r\n                      index === 5 ||\r\n                      index === 6 ||\r\n                      index === 9\r\n                    )\r\n                      blueCellIn = true;\r\n                    if (compareValues(cell, trLoadOnMscRecom[index]))\r\n                      return showCell(cell, index, blueCellIn);\r\n                    else return showDangerCell(cell, index, BG_TXT, blueCellIn);\r\n                  }\r\n                })}\r\n              </tr>\r\n\r\n              <tr>\r\n                {trLoadOnMscRecom.map((cell, index) => {\r\n                  if (index === 0) {\r\n                    return showFirstColCell(cell, index, true);\r\n                  }\r\n                  let blueCellIn = false;\r\n                  if (index === 2 || index === 5 || index === 6 || index === 9)\r\n                    blueCellIn = true;\r\n                  if (compareValues(cell, trLoadOnMsc[index]))\r\n                    return showCell(cell, index, blueCellIn);\r\n                  else return showRecomCell(cell, index, BG_TXT, blueCellIn);\r\n                })}\r\n              </tr>\r\n              {/* second pair of rows*/}\r\n              <tr>\r\n                {trMineralWater.map((cell, index) => {\r\n                  if (index === 0) {\r\n                    return showFirstColCell(cell, index, false);\r\n                  }\r\n                  let blueCellIn = false;\r\n                  if (index === 2 || index === 5 || index === 6 || index === 9)\r\n                    blueCellIn = true;\r\n\r\n                  if (index === 5) {\r\n                    return showDangerCell(cell, index, ONLY_TXT, blueCellIn);\r\n                  } else {\r\n                    if (compareValues(cell, trMineralWaterRecom[index]))\r\n                      return showCell(cell, index, blueCellIn);\r\n                    else return showDangerCell(cell, index, BG_TXT, blueCellIn);\r\n                  }\r\n                })}\r\n              </tr>\r\n              <tr>\r\n                {trMineralWaterRecom.map((cell, index) => {\r\n                  if (index === 0) {\r\n                    return showFirstColCell(cell, index, true);\r\n                  }\r\n                  let blueCellIn = false;\r\n                  if (index === 2 || index === 5 || index === 6 || index === 9)\r\n                    blueCellIn = true;\r\n\r\n                  if (index === 5) {\r\n                    return showRecomCell(cell, index, ONLY_TXT, blueCellIn);\r\n                  }\r\n\r\n                  if (compareValues(cell, trMineralWater[index]))\r\n                    return showCell(cell, index, blueCellIn);\r\n                  else return showRecomCell(cell, index, BG_TXT, blueCellIn);\r\n                })}\r\n              </tr>\r\n\r\n              {/* third pair of rows*/}\r\n              <tr>\r\n                {trDopMshWork.map((cell, index) => {\r\n                  if (index === 0) {\r\n                    return showFirstColCell(cell, index, false);\r\n                  }\r\n                  let blueCellIn = false;\r\n                  if (index === 2 || index === 5 || index === 6 || index === 9)\r\n                    blueCellIn = true;\r\n\r\n                  // будет работать в таком ключе как ниже\r\n                  // if (compareValues(cell, trLoadOnMscRecom[index]))\r\n                  //   return showCell(cell, index);\r\n                  // else\r\n                  // return showDangerCell(cell, index, cur_type);\r\n\r\n                  if (compareValues(cell, trDopMshWorkRecom[index]))\r\n                    return showCell(cell, index, blueCellIn);\r\n                  else\r\n                    return showDangerCell(\r\n                      cell,\r\n                      index,\r\n                      BORDER_BG_TXT,\r\n                      blueCellIn\r\n                    );\r\n                })}\r\n              </tr>\r\n              <tr>\r\n                {trDopMshWorkRecom.map((cell, index) => {\r\n                  if (index === 0) {\r\n                    return showFirstColCell(cell, index, true);\r\n                  }\r\n                  let blueCellIn = false;\r\n                  if (index === 2 || index === 5 || index === 6 || index === 9)\r\n                    blueCellIn = true;\r\n                  if (compareValues(cell, trDopMshWork[index]))\r\n                    return showCell(cell, index, blueCellIn);\r\n                  else\r\n                    return showRecomCell(\r\n                      cell,\r\n                      index,\r\n                      BORDER_BG_TXT,\r\n                      blueCellIn\r\n                    );\r\n                })}\r\n              </tr>\r\n              {/* forth pair of rows */}\r\n              <tr>\r\n                {showFirstColCell(trDopRegime[0], 0, false)}\r\n                <td colSpan=\"4\" rowSpan=\"2\" style={nasosStyles}>\r\n                  <span>{trDopRegime[3]}</span>\r\n                </td>\r\n\r\n                {showCellAfterCount()}\r\n\r\n                <td colSpan=\"3\" rowSpan=\"2\" style={nasosStyles}>\r\n                  <span>{trDopRegime[7]}</span>\r\n                </td>\r\n                <td>\r\n                  <span>{trDopRegime[9]}</span>\r\n                </td>\r\n                <td colSpan=\"3\" rowSpan=\"2\" style={nasosStyles}>\r\n                  <span>{trDopRegime[12]}</span>\r\n                </td>\r\n                <td>\r\n                  <span>{trDopRegime[13]}</span>\r\n                </td>\r\n                <td colSpan=\"2\" rowSpan=\"2\" style={nasosStyles}>\r\n                  <span>{trDopRegime[15]}</span>\r\n                </td>\r\n\r\n                <td\r\n                  colSpan=\"2\"\r\n                  style={{\r\n                    verticalAlign: \"middle\",\r\n                    textAlign: \"right\",\r\n                  }}\r\n                  rowSpan=\"2\"\r\n                >\r\n                  <span>\r\n                    <MySelect\r\n                      IconComponent={ExpandMoreIcon}\r\n                      disableUnderline\r\n                      value={age}\r\n                      onChange={handleChange}\r\n                      displayEmpty\r\n                      // className={classes.selectEmpty}\r\n                      inputProps={{ \"aria-label\": \"Without label\" }}\r\n                      style={{ marginRight: \"1rem\" }}\r\n                    >\r\n                      <MenuItem value=\"\">на 3-97</MenuItem>\r\n                      <MenuItem value={10}>на 3-98</MenuItem>\r\n                      <MenuItem value={20}>на 3-99</MenuItem>\r\n                      <MenuItem value={30}>на 3-100</MenuItem>\r\n                    </MySelect>\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                {showFirstColCell(trDopRegimeRecom[0], 0, true)}\r\n\r\n                {compareValues(trDopRegime[5], trDopRegimeRecom[5])\r\n                  ? showCell(trDopRegimeRecom[5], 5)\r\n                  : showRecomCell(trDopRegimeRecom[5], 5, BORDER_BG_TXT)}\r\n\r\n                <td>\r\n                  <span>{trDopRegimeRecom[9]}</span>\r\n                </td>\r\n\r\n                <td>\r\n                  <span>{trDopRegimeRecom[13]}</span>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n            <tfoot>\r\n              <tr>\r\n                <td colSpan=\"3\" style={{ textAlign: \"left\" }}>\r\n                  {lastUpdateTime.getHours()}:{lastUpdateTime.getMinutes()}\r\n                  <span style={{ paddingLeft: \"1rem\" }}>\r\n                    Рекомендация обновлена\r\n                  </span>\r\n                </td>\r\n                <td colSpan={tableHeaders.length - 3}>\r\n                  <Link to=\"/react_app/history\">\r\n                    <span style={{ color: \"black\" }}>Просмотреть историю</span>\r\n                    <span style={{ color: \"black\" }} className=\"processStep\">\r\n                      &gt;\r\n                    </span>\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <MetalContent></MetalContent>\r\n      <RudaCharacteristics></RudaCharacteristics>\r\n      <Ruda></Ruda>\r\n      <Notification></Notification>\r\n\r\n      <div style={{ marginTop: \"120px\" }}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//style for container of span(cell)\r\nconst setBgBlue = {\r\n  backgroundColor: \"#e1effc\",\r\n  width: \"3.8rem\",\r\n  margin: \"auto\",\r\n  height: \"100%\",\r\n  position: \"relative\",\r\n  // backgroundColor: \"blue\",\r\n};\r\n\r\nconst setBgTransparent = {\r\n  backgroundColor: \"transparent\",\r\n  width: \"3.8rem\",\r\n  margin: \"auto\",\r\n  height: \"100%\",\r\n  position: \"relative\",\r\n};\r\n\r\nconst cellDangerTxt = {\r\n  color: \"#a53e52\",\r\n};\r\nconst cellDangerBgTxt = {\r\n  fontWeight: \"700\",\r\n  color: \"#a53e52\",\r\n  backgroundColor: \"#fae3e5\",\r\n  // #d25868\r\n};\r\nconst cellDangerBorderBgTxt = {\r\n  fontWeight: \"700\",\r\n  color: \"#a53e52\",\r\n  backgroundColor: \"#fae3e5\",\r\n  borderTop: \"4px solid #d25868\",\r\n  // #d25868\r\n};\r\nconst cellRecomTxt = {\r\n  color: \"#566568\",\r\n};\r\nconst cellRecomBgTxt = {\r\n  fontWeight: \"700\",\r\n  color: \"#5e605f\",\r\n  // #d25868\r\n};\r\nconst cellRecomBorderBgTxt = {\r\n  fontWeight: \"700\",\r\n  color: \"#5e605f\",\r\n  backgroundColor: \"#f8faf8\",\r\n  borderBottom: \"4px solid #258c70\",\r\n  // #d25868\r\n};\r\n\r\nconst tableStyle = {\r\n  marginTop: \"1rem\",\r\n  width: \"100%\",\r\n  borderSpacing: \"0\",\r\n};\r\n\r\nconst tableHeaderStyle = {\r\n  height: \"3.38rem\",\r\n};\r\nconst nasosStyles = {\r\n  textAlign: \"right\",\r\n  paddingRight: \"1rem\",\r\n  verticalAlign: \"middle\",\r\n  fontWeight: \"700\",\r\n  color: \"black\",\r\n};\r\n\r\nconst firstColMainStyle = { fontWeight: \"700\", color: \"black\" };\r\nconst firstColRecomStyle = { fontWeight: \"normal\", color: \"$table-text-color\" };\r\n\r\n// table styles\r\n\r\nexport default Recomendations;\r\n","export const NOTHING = \"NOTHING\";\r\nexport const ONLY_TXT = \"ONLY_TXT\";\r\nexport const BG_TXT = \"BG_TXT\";\r\nexport const BORDER_BG_TXT = \"BORDER_BG_TXT\";\r\n","import React from \"react\";\r\n\r\nconst History = () => {\r\n  return <div>History page</div>;\r\n};\r\n\r\nexport default History;\r\n","// import React from \"react\";\r\nimport React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport AppState from \"./context/app/AppState\";\r\nimport Recomendations from \"./components/Recomendations\";\r\nimport History from \"./components/History\";\r\nimport \"./App.scss\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <AppState>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Switch>\r\n              <Route exact path={[\"/\", \"/react_app/\"]}>\r\n                <Navbar highlighted=\"recom\" />\r\n                <div className=\"container\">\r\n                  <Recomendations />\r\n                </div>\r\n              </Route>\r\n              <Route exact path=\"/react_app/history\">\r\n                <Navbar highlighted=\"history\" />\r\n                <div className=\"container\">\r\n                  <History />\r\n                </div>\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </AppState>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"react-app-polyfill/ie11\";\r\nimport \"react-app-polyfill/stable\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}